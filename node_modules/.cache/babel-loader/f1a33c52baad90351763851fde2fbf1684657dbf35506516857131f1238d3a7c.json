{"ast":null,"code":"var _jsxFileName = \"C:\\\\SHREYA\\\\SEM-6\\\\DL\\\\Assignment\\\\vir-psy\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  height: 100vh;\n  padding: 85px 20px 20px;\n  background: linear-gradient(135deg, #a8e6cf, #dcedc1);\n`;\n_c = ChatContainer;\nconst ChatBox = styled.div`\n  width: 90%;\n  max-width: 650px;\n  height: 75vh;\n  background: white;\n  border-radius: 15px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n  padding: 25px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = ChatBox;\nconst Message = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 15px 0;\n  justify-content: ${({\n  isUser\n}) => isUser ? \"flex-end\" : \"flex-start\"};\n`;\n_c3 = Message;\nconst MessageBubble = styled.div`\n  max-width: 75%;\n  padding: 14px;\n  border-radius: 25px;\n  font-size: 1.1rem;\n  background: ${({\n  isUser\n}) => isUser ? \"#4CAF50\" : \"#f1f1f1\"};\n  color: ${({\n  isUser\n}) => isUser ? \"white\" : \"black\"};\n  margin-left: ${({\n  isUser\n}) => isUser ? \"10px\" : \"0\"};\n  margin-right: ${({\n  isUser\n}) => isUser ? \"0\" : \"10px\"};\n`;\n_c4 = MessageBubble;\nconst UserEmoji = styled.span`\n  font-size: 30px;\n  margin: 0 10px;\n`;\n_c5 = UserEmoji;\nconst InputContainer = styled.div`\n  display: flex;\n  width: 90%;\n  max-width: 650px;\n  margin-top: 15px;\n`;\n_c6 = InputContainer;\nconst TextInput = styled.input`\n  flex: 1;\n  padding: 14px;\n  border-radius: 25px;\n  border: 2px solid #4CAF50;\n  font-size: 1rem;\n  outline: none;\n`;\n_c7 = TextInput;\nconst Button = styled.button`\n  margin-left: 10px;\n  padding: 14px 20px;\n  border-radius: 25px;\n  border: none;\n  background: ${({\n  isListening\n}) => isListening ? \"#E91E63\" : \"#4CAF50\"};\n  color: white;\n  font-weight: bold;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    background: ${({\n  isListening\n}) => isListening ? \"#C2185B\" : \"#388E3C\"};\n  }\n`;\n_c8 = Button;\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! How can I assist you today?\",\n    isUser: false\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech Recognition is not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.lang = \"en-US\";\n    recognition.onstart = () => {\n      console.log(\"üéôÔ∏è Speech recognition started\");\n      setIsListening(true);\n    };\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      console.log(\"üì¢ Transcript received:\", transcript);\n      setInput(\"\"); // Clear text input\n      sendMessage(transcript);\n    };\n    recognition.onerror = event => {\n      console.error(\"‚ùå Speech recognition error:\", event.error);\n      setIsListening(false);\n    };\n    recognition.onend = () => {\n      console.log(\"üõë Speech recognition ended\");\n      setIsListening(false);\n    };\n    recognitionRef.current = recognition;\n    return () => {\n      recognition.stop();\n      window.speechSynthesis.cancel();\n    };\n  }, []);\n  const startListening = () => {\n    if (recognitionRef.current && !isListening) {\n      recognitionRef.current.start();\n    }\n  };\n  const stopListening = () => {\n    if (recognitionRef.current && isListening) {\n      recognitionRef.current.stop();\n    }\n  };\n  const sendMessage = async text => {\n    if (!text.trim()) return;\n    const userMessage = {\n      text,\n      isUser: true\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: text\n        })\n      });\n      const data = await response.json();\n      const botText = data.response || \"Sorry, I didn't understand that.\";\n      const botMessage = {\n        text: botText,\n        isUser: false\n      };\n      setMessages(prev => [...prev, botMessage]);\n      speak(botText);\n    } catch (error) {\n      console.error(\"üö® Fetch error:\", error);\n      const errorText = \"Error connecting to server. Please try again.\";\n      setMessages(prev => [...prev, {\n        text: errorText,\n        isUser: false\n      }]);\n      speak(errorText);\n    }\n  };\n  const speak = text => {\n    window.speechSynthesis.cancel();\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = \"en-US\";\n    window.speechSynthesis.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(Message, {\n        isUser: msg.isUser,\n        children: [!msg.isUser && /*#__PURE__*/_jsxDEV(UserEmoji, {\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(MessageBubble, {\n          isUser: msg.isUser,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), msg.isUser && /*#__PURE__*/_jsxDEV(UserEmoji, {\n          children: \"\\uD83E\\uDDD1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 28\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        onKeyPress: e => e.key === \"Enter\" && sendMessage(input)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => sendMessage(input),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        isListening: isListening,\n        onClick: isListening ? stopListening : startListening,\n        children: isListening ? \"üéôÔ∏è Stop\" : \"üé§ Speak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"5qJi0ztc+cFVK7G1rNUTxmDSRp8=\");\n_c9 = Chat;\nexport default Chat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatBox\");\n$RefreshReg$(_c3, \"Message\");\n$RefreshReg$(_c4, \"MessageBubble\");\n$RefreshReg$(_c5, \"UserEmoji\");\n$RefreshReg$(_c6, \"InputContainer\");\n$RefreshReg$(_c7, \"TextInput\");\n$RefreshReg$(_c8, \"Button\");\n$RefreshReg$(_c9, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","jsxDEV","_jsxDEV","ChatContainer","div","_c","ChatBox","_c2","Message","isUser","_c3","MessageBubble","_c4","UserEmoji","span","_c5","InputContainer","_c6","TextInput","input","_c7","Button","button","isListening","_c8","Chat","_s","messages","setMessages","text","setInput","setIsListening","recognitionRef","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","continuous","interimResults","lang","onstart","console","log","onresult","event","transcript","results","sendMessage","onerror","error","onend","current","stop","speechSynthesis","cancel","startListening","start","stopListening","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botText","botMessage","speak","errorText","utterance","SpeechSynthesisUtterance","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onKeyPress","key","onClick","_c9","$RefreshReg$"],"sources":["C:/SHREYA/SEM-6/DL/Assignment/vir-psy/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ChatContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  height: 100vh;\r\n  padding: 85px 20px 20px;\r\n  background: linear-gradient(135deg, #a8e6cf, #dcedc1);\r\n`;\r\n\r\nconst ChatBox = styled.div`\r\n  width: 90%;\r\n  max-width: 650px;\r\n  height: 75vh;\r\n  background: white;\r\n  border-radius: 15px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n  padding: 25px;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 15px 0;\r\n  justify-content: ${({ isUser }) => (isUser ? \"flex-end\" : \"flex-start\")};\r\n`;\r\n\r\nconst MessageBubble = styled.div`\r\n  max-width: 75%;\r\n  padding: 14px;\r\n  border-radius: 25px;\r\n  font-size: 1.1rem;\r\n  background: ${({ isUser }) => (isUser ? \"#4CAF50\" : \"#f1f1f1\")};\r\n  color: ${({ isUser }) => (isUser ? \"white\" : \"black\")};\r\n  margin-left: ${({ isUser }) => (isUser ? \"10px\" : \"0\")};\r\n  margin-right: ${({ isUser }) => (isUser ? \"0\" : \"10px\")};\r\n`;\r\n\r\nconst UserEmoji = styled.span`\r\n  font-size: 30px;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  max-width: 650px;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst TextInput = styled.input`\r\n  flex: 1;\r\n  padding: 14px;\r\n  border-radius: 25px;\r\n  border: 2px solid #4CAF50;\r\n  font-size: 1rem;\r\n  outline: none;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 10px;\r\n  padding: 14px 20px;\r\n  border-radius: 25px;\r\n  border: none;\r\n  background: ${({ isListening }) => (isListening ? \"#E91E63\" : \"#4CAF50\")};\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    background: ${({ isListening }) => (isListening ? \"#C2185B\" : \"#388E3C\")};\r\n  }\r\n`;\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"Hello! How can I assist you today?\", isUser: false }\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [isListening, setIsListening] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert(\"Speech Recognition is not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.continuous = false;\r\n    recognition.interimResults = false;\r\n    recognition.lang = \"en-US\";\r\n\r\n    recognition.onstart = () => {\r\n      console.log(\"üéôÔ∏è Speech recognition started\");\r\n      setIsListening(true);\r\n    };\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      console.log(\"üì¢ Transcript received:\", transcript);\r\n      setInput(\"\"); // Clear text input\r\n      sendMessage(transcript);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error(\"‚ùå Speech recognition error:\", event.error);\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      console.log(\"üõë Speech recognition ended\");\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognitionRef.current = recognition;\r\n\r\n    return () => {\r\n      recognition.stop();\r\n      window.speechSynthesis.cancel();\r\n    };\r\n  }, []);\r\n\r\n  const startListening = () => {\r\n    if (recognitionRef.current && !isListening) {\r\n      recognitionRef.current.start();\r\n    }\r\n  };\r\n\r\n  const stopListening = () => {\r\n    if (recognitionRef.current && isListening) {\r\n      recognitionRef.current.stop();\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    const userMessage = { text, isUser: true };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: text })\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botText = data.response || \"Sorry, I didn't understand that.\";\r\n      const botMessage = { text: botText, isUser: false };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n      speak(botText);\r\n    } catch (error) {\r\n      console.error(\"üö® Fetch error:\", error);\r\n      const errorText = \"Error connecting to server. Please try again.\";\r\n      setMessages((prev) => [...prev, { text: errorText, isUser: false }]);\r\n      speak(errorText);\r\n    }\r\n  };\r\n\r\n  const speak = (text) => {\r\n    window.speechSynthesis.cancel();\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.lang = \"en-US\";\r\n    window.speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ChatBox>\r\n        {messages.map((msg, idx) => (\r\n          <Message key={idx} isUser={msg.isUser}>\r\n            {!msg.isUser && <UserEmoji>ü§ñ</UserEmoji>}\r\n            <MessageBubble isUser={msg.isUser}>{msg.text}</MessageBubble>\r\n            {msg.isUser && <UserEmoji>üßë</UserEmoji>}\r\n          </Message>\r\n        ))}\r\n      </ChatBox>\r\n      <InputContainer>\r\n        <TextInput\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          onKeyPress={(e) => e.key === \"Enter\" && sendMessage(input)}\r\n        />\r\n        <Button onClick={() => sendMessage(input)}>Send</Button>\r\n        <Button isListening={isListening} onClick={isListening ? stopListening : startListening}>\r\n          {isListening ? \"üéôÔ∏è Stop\" : \"üé§ Speak\"}\r\n        </Button>\r\n      </InputContainer>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}